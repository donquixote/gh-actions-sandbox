on:
  release:
    types: [published]
  push:
    tags:
      - '*'

jobs:
  prepare:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    outputs:
      tag: ${{ steps.get_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
      - name: Determine the tag name
        id: get_tag_name
        run: |
          set -e
          if [[ "${{ github.event_name }}" == "release" ]]; then
            TAG_NAME=${{ github.event.release.tag_name }}
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            TAG_NAME=${{ github.ref_name }}
          else
            echo "Unexpected trigger event '${{ github.event_name }}'."
            exit 1
          fi
          echo "Tag name: $TAG_NAME"
          if [ ! IS_DRAFT=$(gh release view --json isDraft $TAG_NAME) ]; then
            echo "Release $TAG_NAME not found"
            HAS_PUBLIC_RELEASE=false
          elif [ $IS_DRAFT -eq 'false' ]; then
            echo "Release $TAG_NAME is not public"
            HAS_PUBLIC_RELEASE=true
          else
            echo "Release $TAG_NAME is public"
            HAS_PUBLIC_RELEASE=false
          fi
          echo "Has public release: $HAS_PUBLIC_RELEASE"

  test-gh-commands:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v2
      - name: Test gh release list 1
        continue-on-error: true
        run: |
          gh release list
      - name: Test gh release list 2
        continue-on-error: true
        run: |
          set -ex
          gh release list --json name
          gh release list --json name --jq '.[].name'
          gh release list --json tagName,name --jq '.[].name + ", " + .[].tagName'
          gh release list --exclude-drafts
      - run: exit 0
      - name: Test gh release view 1
        continue-on-error: true
        run: |
          gh release view 1.0.0
      - name: Test gh release view 2
        continue-on-error: true
        run: |
          gh release view 1.0.0 --json name --jq '.name'
